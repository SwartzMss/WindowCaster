name: Rust Build on Windows

on:
  push:
    branches: ["main"]
    paths:
      - "client/**"
  pull_request:
    branches: ["main"]
    paths:
      - "client/**"

jobs:
  build_rust:
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      # 安装 vcpkg 并配置 FFmpeg
      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat -disableMetrics
        shell: cmd

      - name: Install FFmpeg (Dynamic Link)
        run: |
          cd vcpkg
          .\vcpkg.exe install ffmpeg[core]:x64-windows-md
        shell: cmd

      - name: Integrate vcpkg
        run: |
          cd vcpkg
          .\vcpkg.exe integrate install
        shell: cmd

      # 设置关键环境变量
      - name: Set build environment
        shell: powershell
        run: |
          $vcpkgRoot = "$env:GITHUB_WORKSPACE\vcpkg"
          $ffmpegDir = "$vcpkgRoot\installed\x64-windows-md"
          
          # 设置 vcpkg 路径
          echo "VCPKG_ROOT=$vcpkgRoot" >> $Env:GITHUB_ENV
          
          # 指定动态链接和 triplet
          echo "VCPKGRS_DYNAMIC=1" >> $Env:GITHUB_ENV
          echo "VCPKGRS_TRIPLET=x64-windows-md" >> $Env:GITHUB_ENV
          
          # 直接指定 FFmpeg 路径
          echo "FFMPEG_DIR=$ffmpegDir" >> $Env:GITHUB_ENV
          echo "PKG_CONFIG_PATH=$ffmpegDir\lib\pkgconfig" >> $Env:GITHUB_ENV
          echo "Path=$ffmpegDir\bin;$env:Path" >> $Env:GITHUB_ENV

      # 安装构建工具
      - name: Install pkg-config
        run: choco install pkgconfiglite -y
        shell: powershell

      # 配置 Rust 工具链
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rust-src, rustc-dev, llvm-tools-preview

      # 构建项目
      - name: Build with Cargo
        working-directory: client
        shell: cmd
        run: |
          cargo clean
          cargo build --verbose
        env:
          RUST_BACKTRACE: full