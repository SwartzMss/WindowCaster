// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: windowcaster.proto

#include "windowcaster.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace windowcaster {

inline constexpr WindowInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        class_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        handle_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WindowInfo::WindowInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WindowInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WindowInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WindowInfoDefaultTypeInternal() {}
  union {
    WindowInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WindowInfoDefaultTypeInternal _WindowInfo_default_instance_;

inline constexpr Video::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : frame_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        width_{0u},
        height_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Video::Video(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoDefaultTypeInternal() {}
  union {
    Video _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoDefaultTypeInternal _Video_default_instance_;

inline constexpr StopRender::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_window_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StopRender::StopRender(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopRenderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopRenderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopRenderDefaultTypeInternal() {}
  union {
    StopRender _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopRenderDefaultTypeInternal _StopRender_default_instance_;

inline constexpr Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Status::Status(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;

inline constexpr Image::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        width_{0u},
        height_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Image::Image(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImageDefaultTypeInternal() {}
  union {
    Image _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImageDefaultTypeInternal _Image_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetWindowList::GetWindowList(::_pbi::ConstantInitialized) {}
struct GetWindowListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWindowListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWindowListDefaultTypeInternal() {}
  union {
    GetWindowList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWindowListDefaultTypeInternal _GetWindowList_default_instance_;

inline constexpr WindowList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : windows_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WindowList::WindowList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WindowListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WindowListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WindowListDefaultTypeInternal() {}
  union {
    WindowList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WindowListDefaultTypeInternal _WindowList_default_instance_;

inline constexpr RenderCommand::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_window_{::uint64_t{0u}},
        content_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RenderCommand::RenderCommand(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RenderCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RenderCommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RenderCommandDefaultTypeInternal() {}
  union {
    RenderCommand _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RenderCommandDefaultTypeInternal _RenderCommand_default_instance_;

inline constexpr ServerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        window_list_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ServerResponse::ServerResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerResponseDefaultTypeInternal() {}
  union {
    ServerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerResponseDefaultTypeInternal _ServerResponse_default_instance_;

inline constexpr ClientRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ClientRequest::ClientRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientRequestDefaultTypeInternal() {}
  union {
    ClientRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientRequestDefaultTypeInternal _ClientRequest_default_instance_;
}  // namespace windowcaster
static ::_pb::Metadata file_level_metadata_windowcaster_2eproto[10];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_windowcaster_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_windowcaster_2eproto = nullptr;
const ::uint32_t TableStruct_windowcaster_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::ClientRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::windowcaster::ClientRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::windowcaster::ClientRequest, _impl_.request_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::ServerResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::ServerResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::windowcaster::ServerResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::ServerResponse, _impl_.window_list_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::Status, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::windowcaster::Status, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::Status, _impl_.message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::GetWindowList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::WindowList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::windowcaster::WindowList, _impl_.windows_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::WindowInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::windowcaster::WindowInfo, _impl_.handle_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::WindowInfo, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::WindowInfo, _impl_.class_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::RenderCommand, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::windowcaster::RenderCommand, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::windowcaster::RenderCommand, _impl_.target_window_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::windowcaster::RenderCommand, _impl_.content_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::StopRender, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::windowcaster::StopRender, _impl_.target_window_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::Image, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::windowcaster::Image, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::Image, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::Image, _impl_.height_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::windowcaster::Video, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::windowcaster::Video, _impl_.frame_data_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::Video, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::windowcaster::Video, _impl_.height_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::windowcaster::ClientRequest)},
        {12, 22, -1, sizeof(::windowcaster::ServerResponse)},
        {24, -1, -1, sizeof(::windowcaster::Status)},
        {34, -1, -1, sizeof(::windowcaster::GetWindowList)},
        {42, -1, -1, sizeof(::windowcaster::WindowList)},
        {51, -1, -1, sizeof(::windowcaster::WindowInfo)},
        {62, -1, -1, sizeof(::windowcaster::RenderCommand)},
        {74, -1, -1, sizeof(::windowcaster::StopRender)},
        {83, -1, -1, sizeof(::windowcaster::Image)},
        {94, -1, -1, sizeof(::windowcaster::Video)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::windowcaster::_ClientRequest_default_instance_._instance,
    &::windowcaster::_ServerResponse_default_instance_._instance,
    &::windowcaster::_Status_default_instance_._instance,
    &::windowcaster::_GetWindowList_default_instance_._instance,
    &::windowcaster::_WindowList_default_instance_._instance,
    &::windowcaster::_WindowInfo_default_instance_._instance,
    &::windowcaster::_RenderCommand_default_instance_._instance,
    &::windowcaster::_StopRender_default_instance_._instance,
    &::windowcaster::_Image_default_instance_._instance,
    &::windowcaster::_Video_default_instance_._instance,
};
const char descriptor_table_protodef_windowcaster_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022windowcaster.proto\022\014windowcaster\"\272\001\n\rC"
    "lientRequest\0226\n\017get_window_list\030\001 \001(\0132\033."
    "windowcaster.GetWindowListH\000\0225\n\016render_c"
    "ommand\030\002 \001(\0132\033.windowcaster.RenderComman"
    "dH\000\022/\n\013stop_render\030\003 \001(\0132\030.windowcaster."
    "StopRenderH\000B\t\n\007request\"e\n\016ServerRespons"
    "e\022$\n\006status\030\001 \001(\0132\024.windowcaster.Status\022"
    "-\n\013window_list\030\002 \001(\0132\030.windowcaster.Wind"
    "owList\"*\n\006Status\022\017\n\007success\030\001 \001(\010\022\017\n\007mes"
    "sage\030\002 \001(\t\"\017\n\rGetWindowList\"7\n\nWindowLis"
    "t\022)\n\007windows\030\001 \003(\0132\030.windowcaster.Window"
    "Info\"\?\n\nWindowInfo\022\016\n\006handle\030\001 \001(\004\022\r\n\005ti"
    "tle\030\002 \001(\t\022\022\n\nclass_name\030\003 \001(\t\"}\n\rRenderC"
    "ommand\022\025\n\rtarget_window\030\001 \001(\004\022$\n\005image\030\002"
    " \001(\0132\023.windowcaster.ImageH\000\022$\n\005video\030\003 \001"
    "(\0132\023.windowcaster.VideoH\000B\t\n\007content\"#\n\n"
    "StopRender\022\025\n\rtarget_window\030\001 \001(\004\"4\n\005Ima"
    "ge\022\014\n\004data\030\001 \001(\014\022\r\n\005width\030\002 \001(\r\022\016\n\006heigh"
    "t\030\003 \001(\r\":\n\005Video\022\022\n\nframe_data\030\001 \001(\014\022\r\n\005"
    "width\030\002 \001(\r\022\016\n\006height\030\003 \001(\rb\006proto3"
};
static ::absl::once_flag descriptor_table_windowcaster_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_windowcaster_2eproto = {
    false,
    false,
    795,
    descriptor_table_protodef_windowcaster_2eproto,
    "windowcaster.proto",
    &descriptor_table_windowcaster_2eproto_once,
    nullptr,
    0,
    10,
    schemas,
    file_default_instances,
    TableStruct_windowcaster_2eproto::offsets,
    file_level_metadata_windowcaster_2eproto,
    file_level_enum_descriptors_windowcaster_2eproto,
    file_level_service_descriptors_windowcaster_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_windowcaster_2eproto_getter() {
  return &descriptor_table_windowcaster_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_windowcaster_2eproto(&descriptor_table_windowcaster_2eproto);
namespace windowcaster {
// ===================================================================

class ClientRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::windowcaster::ClientRequest, _impl_._oneof_case_);
  static const ::windowcaster::GetWindowList& get_window_list(const ClientRequest* msg);
  static const ::windowcaster::RenderCommand& render_command(const ClientRequest* msg);
  static const ::windowcaster::StopRender& stop_render(const ClientRequest* msg);
};

const ::windowcaster::GetWindowList& ClientRequest::_Internal::get_window_list(const ClientRequest* msg) {
  return *msg->_impl_.request_.get_window_list_;
}
const ::windowcaster::RenderCommand& ClientRequest::_Internal::render_command(const ClientRequest* msg) {
  return *msg->_impl_.request_.render_command_;
}
const ::windowcaster::StopRender& ClientRequest::_Internal::stop_render(const ClientRequest* msg) {
  return *msg->_impl_.request_.stop_render_;
}
void ClientRequest::set_allocated_get_window_list(::windowcaster::GetWindowList* get_window_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (get_window_list) {
    ::google::protobuf::Arena* submessage_arena = get_window_list->GetArena();
    if (message_arena != submessage_arena) {
      get_window_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_window_list, submessage_arena);
    }
    set_has_get_window_list();
    _impl_.request_.get_window_list_ = get_window_list;
  }
  // @@protoc_insertion_point(field_set_allocated:windowcaster.ClientRequest.get_window_list)
}
void ClientRequest::set_allocated_render_command(::windowcaster::RenderCommand* render_command) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (render_command) {
    ::google::protobuf::Arena* submessage_arena = render_command->GetArena();
    if (message_arena != submessage_arena) {
      render_command = ::google::protobuf::internal::GetOwnedMessage(message_arena, render_command, submessage_arena);
    }
    set_has_render_command();
    _impl_.request_.render_command_ = render_command;
  }
  // @@protoc_insertion_point(field_set_allocated:windowcaster.ClientRequest.render_command)
}
void ClientRequest::set_allocated_stop_render(::windowcaster::StopRender* stop_render) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (stop_render) {
    ::google::protobuf::Arena* submessage_arena = stop_render->GetArena();
    if (message_arena != submessage_arena) {
      stop_render = ::google::protobuf::internal::GetOwnedMessage(message_arena, stop_render, submessage_arena);
    }
    set_has_stop_render();
    _impl_.request_.stop_render_ = stop_render;
  }
  // @@protoc_insertion_point(field_set_allocated:windowcaster.ClientRequest.stop_render)
}
ClientRequest::ClientRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.ClientRequest)
}
inline PROTOBUF_NDEBUG_INLINE ClientRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : request_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ClientRequest::ClientRequest(
    ::google::protobuf::Arena* arena,
    const ClientRequest& from)
    : ::google::protobuf::Message(arena) {
  ClientRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (request_case()) {
    case REQUEST_NOT_SET:
      break;
      case kGetWindowList:
        _impl_.request_.get_window_list_ = CreateMaybeMessage<::windowcaster::GetWindowList>(arena, *from._impl_.request_.get_window_list_);
        break;
      case kRenderCommand:
        _impl_.request_.render_command_ = CreateMaybeMessage<::windowcaster::RenderCommand>(arena, *from._impl_.request_.render_command_);
        break;
      case kStopRender:
        _impl_.request_.stop_render_ = CreateMaybeMessage<::windowcaster::StopRender>(arena, *from._impl_.request_.stop_render_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:windowcaster.ClientRequest)
}
inline PROTOBUF_NDEBUG_INLINE ClientRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ClientRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:windowcaster.ClientRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_request()) {
    clear_request();
  }
  _impl_.~Impl_();
}

void ClientRequest::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:windowcaster.ClientRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (request_case()) {
    case kGetWindowList: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.get_window_list_;
      }
      break;
    }
    case kRenderCommand: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.render_command_;
      }
      break;
    }
    case kStopRender: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.stop_render_;
      }
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_NOT_SET;
}


PROTOBUF_NOINLINE void ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.ClientRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> ClientRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClientRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .windowcaster.GetWindowList get_window_list = 1;
    {PROTOBUF_FIELD_OFFSET(ClientRequest, _impl_.request_.get_window_list_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .windowcaster.RenderCommand render_command = 2;
    {PROTOBUF_FIELD_OFFSET(ClientRequest, _impl_.request_.render_command_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .windowcaster.StopRender stop_render = 3;
    {PROTOBUF_FIELD_OFFSET(ClientRequest, _impl_.request_.stop_render_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::windowcaster::_GetWindowList_default_instance_},
    {::_pbi::TcParser::GetTable<::windowcaster::RenderCommand>()},
    {::_pbi::TcParser::GetTable<::windowcaster::StopRender>()},
  }}, {{
  }},
};

::uint8_t* ClientRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.ClientRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (request_case()) {
    case kGetWindowList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::get_window_list(this),
          _Internal::get_window_list(this).GetCachedSize(), target, stream);
      break;
    }
    case kRenderCommand: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::render_command(this),
          _Internal::render_command(this).GetCachedSize(), target, stream);
      break;
    }
    case kStopRender: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::stop_render(this),
          _Internal::stop_render(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.ClientRequest)
  return target;
}

::size_t ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.ClientRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_case()) {
    // .windowcaster.GetWindowList get_window_list = 1;
    case kGetWindowList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.request_.get_window_list_);
      break;
    }
    // .windowcaster.RenderCommand render_command = 2;
    case kRenderCommand: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.request_.render_command_);
      break;
    }
    // .windowcaster.StopRender stop_render = 3;
    case kStopRender: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.request_.stop_render_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClientRequest::_class_data_ = {
    ClientRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClientRequest::GetClassData() const {
  return &_class_data_;
}

void ClientRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClientRequest*>(&to_msg);
  auto& from = static_cast<const ClientRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.ClientRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_case()) {
    case kGetWindowList: {
      _this->_internal_mutable_get_window_list()->::windowcaster::GetWindowList::MergeFrom(
          from._internal_get_window_list());
      break;
    }
    case kRenderCommand: {
      _this->_internal_mutable_render_command()->::windowcaster::RenderCommand::MergeFrom(
          from._internal_render_command());
      break;
    }
    case kStopRender: {
      _this->_internal_mutable_stop_render()->::windowcaster::StopRender::MergeFrom(
          from._internal_stop_render());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientRequest::CopyFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClientRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClientRequest::InternalSwap(ClientRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_, other->_impl_.request_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ClientRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[0]);
}
// ===================================================================

class ServerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ServerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_._has_bits_);
  static const ::windowcaster::Status& status(const ServerResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::windowcaster::WindowList& window_list(const ServerResponse* msg);
  static void set_has_window_list(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::windowcaster::Status& ServerResponse::_Internal::status(const ServerResponse* msg) {
  return *msg->_impl_.status_;
}
const ::windowcaster::WindowList& ServerResponse::_Internal::window_list(const ServerResponse* msg) {
  return *msg->_impl_.window_list_;
}
ServerResponse::ServerResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.ServerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ServerResponse::ServerResponse(
    ::google::protobuf::Arena* arena,
    const ServerResponse& from)
    : ::google::protobuf::Message(arena) {
  ServerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::windowcaster::Status>(arena, *from._impl_.status_)
                : nullptr;
  _impl_.window_list_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::windowcaster::WindowList>(arena, *from._impl_.window_list_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:windowcaster.ServerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ServerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, window_list_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::window_list_));
}
ServerResponse::~ServerResponse() {
  // @@protoc_insertion_point(destructor:windowcaster.ServerResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  delete _impl_.window_list_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.ServerResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.window_list_ != nullptr);
      _impl_.window_list_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ServerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServerResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .windowcaster.WindowList window_list = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.window_list_)}},
    // .windowcaster.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .windowcaster.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .windowcaster.WindowList window_list = 2;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.window_list_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::windowcaster::Status>()},
    {::_pbi::TcParser::GetTable<::windowcaster::WindowList>()},
  }}, {{
  }},
};

::uint8_t* ServerResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.ServerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .windowcaster.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .windowcaster.WindowList window_list = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::window_list(this),
        _Internal::window_list(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.ServerResponse)
  return target;
}

::size_t ServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.ServerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .windowcaster.Status status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
    }

    // .windowcaster.WindowList window_list = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.window_list_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerResponse::_class_data_ = {
    ServerResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServerResponse::GetClassData() const {
  return &_class_data_;
}

void ServerResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerResponse*>(&to_msg);
  auto& from = static_cast<const ServerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.ServerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_status()->::windowcaster::Status::MergeFrom(
          from._internal_status());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_window_list()->::windowcaster::WindowList::MergeFrom(
          from._internal_window_list());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerResponse::CopyFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServerResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServerResponse::InternalSwap(ServerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.window_list_)
      + sizeof(ServerResponse::_impl_.window_list_)
      - PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ServerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[1]);
}
// ===================================================================

class Status::_Internal {
 public:
};

Status::Status(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

Status::Status(
    ::google::protobuf::Arena* arena,
    const Status& from)
    : ::google::protobuf::Message(arena) {
  Status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:windowcaster.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
Status::~Status() {
  // @@protoc_insertion_point(destructor:windowcaster.Status)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Status::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.Status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Status::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 35, 2> Status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Status_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Status, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\0\7\0\0\0\0\0"
    "windowcaster.Status"
    "message"
  }},
};

::uint8_t* Status::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.Status)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "windowcaster.Status.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.Status)
  return target;
}

::size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.Status)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Status::_class_data_ = {
    Status::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Status::GetClassData() const {
  return &_class_data_;
}

void Status::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Status::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Status::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Status::InternalSwap(Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[2]);
}
// ===================================================================

class GetWindowList::_Internal {
 public:
};

GetWindowList::GetWindowList(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:windowcaster.GetWindowList)
}
GetWindowList::GetWindowList(
    ::google::protobuf::Arena* arena,
    const GetWindowList& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetWindowList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:windowcaster.GetWindowList)
}









::google::protobuf::Metadata GetWindowList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[3]);
}
// ===================================================================

class WindowList::_Internal {
 public:
};

WindowList::WindowList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.WindowList)
}
inline PROTOBUF_NDEBUG_INLINE WindowList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : windows_{visibility, arena, from.windows_},
        _cached_size_{0} {}

WindowList::WindowList(
    ::google::protobuf::Arena* arena,
    const WindowList& from)
    : ::google::protobuf::Message(arena) {
  WindowList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:windowcaster.WindowList)
}
inline PROTOBUF_NDEBUG_INLINE WindowList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : windows_{visibility, arena},
        _cached_size_{0} {}

inline void WindowList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WindowList::~WindowList() {
  // @@protoc_insertion_point(destructor:windowcaster.WindowList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WindowList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WindowList::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.WindowList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.windows_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WindowList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> WindowList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WindowList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .windowcaster.WindowInfo windows = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WindowList, _impl_.windows_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .windowcaster.WindowInfo windows = 1;
    {PROTOBUF_FIELD_OFFSET(WindowList, _impl_.windows_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::windowcaster::WindowInfo>()},
  }}, {{
  }},
};

::uint8_t* WindowList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.WindowList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .windowcaster.WindowInfo windows = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_windows_size()); i < n; i++) {
    const auto& repfield = this->_internal_windows().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.WindowList)
  return target;
}

::size_t WindowList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.WindowList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .windowcaster.WindowInfo windows = 1;
  total_size += 1UL * this->_internal_windows_size();
  for (const auto& msg : this->_internal_windows()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WindowList::_class_data_ = {
    WindowList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WindowList::GetClassData() const {
  return &_class_data_;
}

void WindowList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WindowList*>(&to_msg);
  auto& from = static_cast<const WindowList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.WindowList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_windows()->MergeFrom(
      from._internal_windows());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WindowList::CopyFrom(const WindowList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.WindowList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WindowList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WindowList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WindowList::InternalSwap(WindowList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.windows_.InternalSwap(&other->_impl_.windows_);
}

::google::protobuf::Metadata WindowList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[4]);
}
// ===================================================================

class WindowInfo::_Internal {
 public:
};

WindowInfo::WindowInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.WindowInfo)
}
inline PROTOBUF_NDEBUG_INLINE WindowInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : title_(arena, from.title_),
        class_name_(arena, from.class_name_),
        _cached_size_{0} {}

WindowInfo::WindowInfo(
    ::google::protobuf::Arena* arena,
    const WindowInfo& from)
    : ::google::protobuf::Message(arena) {
  WindowInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.handle_ = from._impl_.handle_;

  // @@protoc_insertion_point(copy_constructor:windowcaster.WindowInfo)
}
inline PROTOBUF_NDEBUG_INLINE WindowInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        class_name_(arena),
        _cached_size_{0} {}

inline void WindowInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.handle_ = {};
}
WindowInfo::~WindowInfo() {
  // @@protoc_insertion_point(destructor:windowcaster.WindowInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WindowInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.class_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WindowInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.WindowInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.class_name_.ClearToEmpty();
  _impl_.handle_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WindowInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 47, 2> WindowInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WindowInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 handle = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WindowInfo, _impl_.handle_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WindowInfo, _impl_.handle_)}},
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WindowInfo, _impl_.title_)}},
    // string class_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WindowInfo, _impl_.class_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 handle = 1;
    {PROTOBUF_FIELD_OFFSET(WindowInfo, _impl_.handle_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(WindowInfo, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string class_name = 3;
    {PROTOBUF_FIELD_OFFSET(WindowInfo, _impl_.class_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\5\12\0\0\0\0"
    "windowcaster.WindowInfo"
    "title"
    "class_name"
  }},
};

::uint8_t* WindowInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.WindowInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 handle = 1;
  if (this->_internal_handle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_handle(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "windowcaster.WindowInfo.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string class_name = 3;
  if (!this->_internal_class_name().empty()) {
    const std::string& _s = this->_internal_class_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "windowcaster.WindowInfo.class_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.WindowInfo)
  return target;
}

::size_t WindowInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.WindowInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string class_name = 3;
  if (!this->_internal_class_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_class_name());
  }

  // uint64 handle = 1;
  if (this->_internal_handle() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_handle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WindowInfo::_class_data_ = {
    WindowInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WindowInfo::GetClassData() const {
  return &_class_data_;
}

void WindowInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WindowInfo*>(&to_msg);
  auto& from = static_cast<const WindowInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.WindowInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_class_name().empty()) {
    _this->_internal_set_class_name(from._internal_class_name());
  }
  if (from._internal_handle() != 0) {
    _this->_internal_set_handle(from._internal_handle());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WindowInfo::CopyFrom(const WindowInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.WindowInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WindowInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WindowInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WindowInfo::InternalSwap(WindowInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_name_, &other->_impl_.class_name_, arena);
        swap(_impl_.handle_, other->_impl_.handle_);
}

::google::protobuf::Metadata WindowInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[5]);
}
// ===================================================================

class RenderCommand::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::windowcaster::RenderCommand, _impl_._oneof_case_);
  static const ::windowcaster::Image& image(const RenderCommand* msg);
  static const ::windowcaster::Video& video(const RenderCommand* msg);
};

const ::windowcaster::Image& RenderCommand::_Internal::image(const RenderCommand* msg) {
  return *msg->_impl_.content_.image_;
}
const ::windowcaster::Video& RenderCommand::_Internal::video(const RenderCommand* msg) {
  return *msg->_impl_.content_.video_;
}
void RenderCommand::set_allocated_image(::windowcaster::Image* image) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_content();
  if (image) {
    ::google::protobuf::Arena* submessage_arena = image->GetArena();
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(message_arena, image, submessage_arena);
    }
    set_has_image();
    _impl_.content_.image_ = image;
  }
  // @@protoc_insertion_point(field_set_allocated:windowcaster.RenderCommand.image)
}
void RenderCommand::set_allocated_video(::windowcaster::Video* video) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_content();
  if (video) {
    ::google::protobuf::Arena* submessage_arena = video->GetArena();
    if (message_arena != submessage_arena) {
      video = ::google::protobuf::internal::GetOwnedMessage(message_arena, video, submessage_arena);
    }
    set_has_video();
    _impl_.content_.video_ = video;
  }
  // @@protoc_insertion_point(field_set_allocated:windowcaster.RenderCommand.video)
}
RenderCommand::RenderCommand(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.RenderCommand)
}
inline PROTOBUF_NDEBUG_INLINE RenderCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : content_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

RenderCommand::RenderCommand(
    ::google::protobuf::Arena* arena,
    const RenderCommand& from)
    : ::google::protobuf::Message(arena) {
  RenderCommand* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.target_window_ = from._impl_.target_window_;
  switch (content_case()) {
    case CONTENT_NOT_SET:
      break;
      case kImage:
        _impl_.content_.image_ = CreateMaybeMessage<::windowcaster::Image>(arena, *from._impl_.content_.image_);
        break;
      case kVideo:
        _impl_.content_.video_ = CreateMaybeMessage<::windowcaster::Video>(arena, *from._impl_.content_.video_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:windowcaster.RenderCommand)
}
inline PROTOBUF_NDEBUG_INLINE RenderCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : content_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void RenderCommand::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.target_window_ = {};
}
RenderCommand::~RenderCommand() {
  // @@protoc_insertion_point(destructor:windowcaster.RenderCommand)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RenderCommand::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_content()) {
    clear_content();
  }
  _impl_.~Impl_();
}

void RenderCommand::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:windowcaster.RenderCommand)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (content_case()) {
    case kImage: {
      if (GetArena() == nullptr) {
        delete _impl_.content_.image_;
      }
      break;
    }
    case kVideo: {
      if (GetArena() == nullptr) {
        delete _impl_.content_.video_;
      }
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONTENT_NOT_SET;
}


PROTOBUF_NOINLINE void RenderCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.RenderCommand)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_window_ = ::uint64_t{0u};
  clear_content();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RenderCommand::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 0, 2> RenderCommand::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RenderCommand_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 target_window = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RenderCommand, _impl_.target_window_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RenderCommand, _impl_.target_window_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 target_window = 1;
    {PROTOBUF_FIELD_OFFSET(RenderCommand, _impl_.target_window_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .windowcaster.Image image = 2;
    {PROTOBUF_FIELD_OFFSET(RenderCommand, _impl_.content_.image_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .windowcaster.Video video = 3;
    {PROTOBUF_FIELD_OFFSET(RenderCommand, _impl_.content_.video_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::windowcaster::Image>()},
    {::_pbi::TcParser::GetTable<::windowcaster::Video>()},
  }}, {{
  }},
};

::uint8_t* RenderCommand::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.RenderCommand)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 target_window = 1;
  if (this->_internal_target_window() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_target_window(), target);
  }

  switch (content_case()) {
    case kImage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::image(this),
          _Internal::image(this).GetCachedSize(), target, stream);
      break;
    }
    case kVideo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::video(this),
          _Internal::video(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.RenderCommand)
  return target;
}

::size_t RenderCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.RenderCommand)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 target_window = 1;
  if (this->_internal_target_window() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_target_window());
  }

  switch (content_case()) {
    // .windowcaster.Image image = 2;
    case kImage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.content_.image_);
      break;
    }
    // .windowcaster.Video video = 3;
    case kVideo: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.content_.video_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RenderCommand::_class_data_ = {
    RenderCommand::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RenderCommand::GetClassData() const {
  return &_class_data_;
}

void RenderCommand::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RenderCommand*>(&to_msg);
  auto& from = static_cast<const RenderCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.RenderCommand)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_target_window() != 0) {
    _this->_internal_set_target_window(from._internal_target_window());
  }
  switch (from.content_case()) {
    case kImage: {
      _this->_internal_mutable_image()->::windowcaster::Image::MergeFrom(
          from._internal_image());
      break;
    }
    case kVideo: {
      _this->_internal_mutable_video()->::windowcaster::Video::MergeFrom(
          from._internal_video());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RenderCommand::CopyFrom(const RenderCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.RenderCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RenderCommand::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RenderCommand::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RenderCommand::InternalSwap(RenderCommand* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.target_window_, other->_impl_.target_window_);
  swap(_impl_.content_, other->_impl_.content_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RenderCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[6]);
}
// ===================================================================

class StopRender::_Internal {
 public:
};

StopRender::StopRender(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.StopRender)
}
StopRender::StopRender(
    ::google::protobuf::Arena* arena, const StopRender& from)
    : StopRender(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StopRender::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopRender::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.target_window_ = {};
}
StopRender::~StopRender() {
  // @@protoc_insertion_point(destructor:windowcaster.StopRender)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopRender::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopRender::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.StopRender)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_window_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopRender::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StopRender::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StopRender_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 target_window = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StopRender, _impl_.target_window_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StopRender, _impl_.target_window_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 target_window = 1;
    {PROTOBUF_FIELD_OFFSET(StopRender, _impl_.target_window_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StopRender::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.StopRender)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 target_window = 1;
  if (this->_internal_target_window() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_target_window(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.StopRender)
  return target;
}

::size_t StopRender::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.StopRender)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 target_window = 1;
  if (this->_internal_target_window() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_target_window());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopRender::_class_data_ = {
    StopRender::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopRender::GetClassData() const {
  return &_class_data_;
}

void StopRender::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopRender*>(&to_msg);
  auto& from = static_cast<const StopRender&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.StopRender)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_target_window() != 0) {
    _this->_internal_set_target_window(from._internal_target_window());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopRender::CopyFrom(const StopRender& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.StopRender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopRender::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopRender::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopRender::InternalSwap(StopRender* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.target_window_, other->_impl_.target_window_);
}

::google::protobuf::Metadata StopRender::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[7]);
}
// ===================================================================

class Image::_Internal {
 public:
};

Image::Image(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.Image)
}
inline PROTOBUF_NDEBUG_INLINE Image::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

Image::Image(
    ::google::protobuf::Arena* arena,
    const Image& from)
    : ::google::protobuf::Message(arena) {
  Image* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:windowcaster.Image)
}
inline PROTOBUF_NDEBUG_INLINE Image::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void Image::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));
}
Image::~Image() {
  // @@protoc_insertion_point(destructor:windowcaster.Image)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Image::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.Image)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Image::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Image::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Image_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.data_)}},
    // uint32 width = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Image, _impl_.width_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.width_)}},
    // uint32 height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Image, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 width = 2;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 height = 3;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Image::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.Image)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint32 width = 2;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_width(), target);
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.Image)
  return target;
}

::size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.Image)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // uint32 width = 2;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_width());
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Image::_class_data_ = {
    Image::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Image::GetClassData() const {
  return &_class_data_;
}

void Image::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Image*>(&to_msg);
  auto& from = static_cast<const Image&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.Image)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Image::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Image::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Image::InternalSwap(Image* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Image, _impl_.height_)
      + sizeof(Image::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(Image, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata Image::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[8]);
}
// ===================================================================

class Video::_Internal {
 public:
};

Video::Video(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:windowcaster.Video)
}
inline PROTOBUF_NDEBUG_INLINE Video::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : frame_data_(arena, from.frame_data_),
        _cached_size_{0} {}

Video::Video(
    ::google::protobuf::Arena* arena,
    const Video& from)
    : ::google::protobuf::Message(arena) {
  Video* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:windowcaster.Video)
}
inline PROTOBUF_NDEBUG_INLINE Video::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : frame_data_(arena),
        _cached_size_{0} {}

inline void Video::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));
}
Video::~Video() {
  // @@protoc_insertion_point(destructor:windowcaster.Video)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Video::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.frame_data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Video::Clear() {
// @@protoc_insertion_point(message_clear_start:windowcaster.Video)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.frame_data_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Video::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Video::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Video_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes frame_data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Video, _impl_.frame_data_)}},
    // uint32 width = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Video, _impl_.width_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Video, _impl_.width_)}},
    // uint32 height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Video, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Video, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes frame_data = 1;
    {PROTOBUF_FIELD_OFFSET(Video, _impl_.frame_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 width = 2;
    {PROTOBUF_FIELD_OFFSET(Video, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 height = 3;
    {PROTOBUF_FIELD_OFFSET(Video, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Video::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:windowcaster.Video)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes frame_data = 1;
  if (!this->_internal_frame_data().empty()) {
    const std::string& _s = this->_internal_frame_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint32 width = 2;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_width(), target);
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:windowcaster.Video)
  return target;
}

::size_t Video::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:windowcaster.Video)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame_data = 1;
  if (!this->_internal_frame_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_frame_data());
  }

  // uint32 width = 2;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_width());
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Video::_class_data_ = {
    Video::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Video::GetClassData() const {
  return &_class_data_;
}

void Video::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Video*>(&to_msg);
  auto& from = static_cast<const Video&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:windowcaster.Video)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_frame_data().empty()) {
    _this->_internal_set_frame_data(from._internal_frame_data());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Video::CopyFrom(const Video& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:windowcaster.Video)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Video::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Video::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Video::InternalSwap(Video* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_data_, &other->_impl_.frame_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Video, _impl_.height_)
      + sizeof(Video::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(Video, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata Video::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_windowcaster_2eproto_getter, &descriptor_table_windowcaster_2eproto_once,
      file_level_metadata_windowcaster_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace windowcaster
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
